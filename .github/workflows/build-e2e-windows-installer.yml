name: Build Windows Installer End to End


on:
  workflow_dispatch:
  push:
    branches:
      - '**'
jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # --- Step 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Step 2. Setup Node and Rust (for Tauri)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      # --- Step 3. Setup Python & PyInstaller
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install PyInstaller
        run: pip install pyinstaller

      # --- Step 4. Build Python backend EXE
      - name: Build backend with PyInstaller
        working-directory: video-analyser-backend
        run: >
          echo "Current path:"
          pwd
          dir

          pyinstaller
          --name video_analyzer_backend
          --onedir
          --noconsole
          --add-data "templates;templates"
          --add-data "protos;protos"
          server.py


      # --- Step 5. Fetch Ollama binary
      - name: Download Ollama EXE from release
        run: |
          curl -L -o ollama.exe https://github.com/lee-jian-hui/video-analyzer-app/releases/download/large-files/ollama.exe
          mkdir -p src-tauri/sidecars
          move ollama.exe src-tauri/sidecars/

      - name: Download Ollama models
        run: |
          curl -L -o ollama_models.zip https://github.com/lee-jian-hui/video-analyzer-app/releases/download/large-files/ollama_models.zip
          mkdir -p src-tauri/resources/ollama_models
          powershell -Command "Expand-Archive -Force 'ollama_models.zip' 'src-tauri/resources/ollama_models'"

      # --- Step 7. Copy backend EXE into Tauri sidecars
      - name: Copy backend to Tauri sidecars
        run: |
          dir src-tauri/sidecars/video_analyzer_backend
          mkdir -p src-tauri/sidecars/video_analyzer_backend
          xcopy video-analyser-backend\dist\video_analyzer_backend src-tauri\sidecars\video_analyzer_backend /E /I /Y

      # --- Step 8. Install frontend dependencies
      - name: Install NPM dependencies
        working-directory: my-tauri-app
        run: npm ci

      # --- Step 9. Build full Tauri Windows installer
      - name: Build Tauri installer
        working-directory: my-tauri-app
        run: npm run tauri build

      # --- Step 10. Upload installer as artifact
      - name: Upload built installer
        uses: actions/upload-artifact@v4
        with:
          name: video-analyzer-windows-installer
          path: my-tauri-app/src-tauri/target/release/bundle/**
