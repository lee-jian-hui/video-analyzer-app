name: Build Python Backend (Windows)

on:
  workflow_dispatch:
  push:
    branches: [ main, feature/integrate-python-backend ]
    paths:
      - 'video-analyser-backend/**'
      - '.github/workflows/build-backend-windows.yml'

permissions:
  contents: write  # Needed for release upload

jobs:
  # ==============================================================
  # 1️⃣  ENVIRONMENT SETUP (base build tools)
  # ==============================================================
  setup-env:
    runs-on: windows-latest
    outputs:
      python-version: ${{ steps.python.outputs.python-version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Protocol Buffers Compiler
        run: |
          Write-Host "Installing protoc..." -ForegroundColor Cyan
          choco install protoc -y
          Write-Host "protoc installed successfully" -ForegroundColor Green
          protoc --version

  # ==============================================================
  # 2️⃣  GENERATE gRPC STUBS (runs in parallel)
  # ==============================================================
  generate-grpc:
    needs: setup-env
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install gRPC Tools
        run: pip install grpcio grpcio-tools protobuf

      - name: Generate Python gRPC Code
        working-directory: video-analyser-backend
        run: |
          Write-Host "Generating gRPC Python code..." -ForegroundColor Cyan
          python -m grpc_tools.protoc `
            -Iprotos `
            --python_out=protos `
            --grpc_python_out=protos `
            protos/video_analyzer.proto
          Write-Host "✓ gRPC code generated" -ForegroundColor Green

      - name: Upload Generated gRPC Code
        uses: actions/upload-artifact@v4
        with:
          name: grpc-protos
          path: video-analyser-backend/protos

  # ==============================================================
  # 3️⃣  MODEL PREP (optional parallel lightweight job)
  # ==============================================================
  prepare-models:
    needs: setup-env
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prepare ML Models directory
        working-directory: video-analyser-backend
        run: |
          Write-Host "Preparing ml-models directory..." -ForegroundColor Cyan
          New-Item -ItemType Directory -Force -Path ml-models | Out-Null
          Write-Host "✓ Directory ready" -ForegroundColor Green

      - uses: actions/upload-artifact@v4
        with:
          name: ml-models
          path: video-analyser-backend/ml-models

  # ==============================================================
  # 4️⃣  MAIN BUILD JOB (depends on both gRPC + setup)
  # ==============================================================
  build-backend:
    needs: [setup-env, generate-grpc, prepare-models]
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download gRPC Artifacts
        uses: actions/download-artifact@v4
        with:
          name: grpc-protos
          path: video-analyser-backend/protos

      - name: Download ML Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ml-models
          path: video-analyser-backend/ml-models

      - name: Install Dependencies
        working-directory: video-analyser-backend
        run: |
          Write-Host "Installing Python dependencies..." -ForegroundColor Cyan
          python -m pip install --upgrade pip
          pip install -r requirements.txt || (
            pip install grpcio grpcio-tools protobuf `
              python-dotenv langchain tiktoken `
              torch torchvision --index-url https://download.pytorch.org/whl/cpu `
              transformers accelerate opencv-python-headless `
              ultralytics openai-whisper google-generativeai `
              numpy pillow pyinstaller
          )
          Write-Host "✓ Dependencies installed" -ForegroundColor Green

      - name: Generate PyInstaller Spec
        working-directory: video-analyser-backend
        run: |
          Write-Host "Generating PyInstaller spec..." -ForegroundColor Cyan
          python scripts/generate_pyinstaller_spec.py
          Write-Host "✓ Spec file created" -ForegroundColor Green

      - name: Build Executable
        working-directory: video-analyser-backend
        run: |
          Write-Host "Building Windows executable..." -ForegroundColor Cyan
          pyinstaller video_anal_
